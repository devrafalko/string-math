module.exports = [
  {expression:" 0  ",result:0},
  {expression:"1",result:1},
  {expression:"   1 ",result:1},
  {expression:"-0",result:-0},
  {expression:"-1",result:-1},
  {expression:"1+1",result:2},
  {expression:"1-1",result:0},
  {expression:"1 + 1",result:2},
  {expression:"  1 -   1 ",result:0},
  {expression:"(1+1)",result:2},
  {expression:" ( ( 1 + 1 ) ) ",result:2},
  {expression:"0.5 + 0.5",result:1},
  {expression:".5 + .5",result:1},
  {expression:"00.5 + 00.5",result:1},
  {expression:"2 * 3",result:6},
  {expression:"10 / 2",result:5},
  {expression:"10 - 2",result:8},
  {expression:"-2 - -2",result:0},
  {expression:"+1+2",result:3},
  {expression:"5+-2",result:3},
  {expression:"+5+-2",result:3},
  {expression:"5-+2",result:3},
  {expression:"+5-+2",result:3},
  {expression:"5--2",result:7},
  {expression:"+5--2",result:7},
  {expression:"+5++2",result:7},
  {expression:"+5 + +2",result:7},
  {expression:"-5 - -2",result:-3},
  {expression:"--7--7",result:14},
  {expression:"5+(-1)",result:4},
  {expression:"5-(1)",result:4},
  {expression:"5-(+1)",result:4},
  {expression:"5-(-1)",result:6},
  {expression:"-5+(-1)",result:-6},
  {expression:"-5-(1)",result:-6},
  {expression:"-5-(+1)",result:-6},
  {expression:"-5-(-1)",result:-4},
  {expression:"1",result:1},
  {expression:"-1",result:-1},
  {expression:"-(1)",result:-1},
  {expression:"+1",result:1},
  {expression:"+(1)",result:1},
  {expression:"++1",result:1},
  {expression:"+(+1)",result:1},
  {expression:"--1",result:1},
  {expression:"-(-1)",result:1},
  {expression:"-+1",result:-1},
  {expression:"-(+1)",result:-1},
  {expression:"+-1",result:-1},
  {expression:"+(-1)",result:-1},
  {expression:"---1",result:-1},
  {expression:"--+1",result:1},
  {expression:"-(-(-1))",result:-1},
  {expression:"-(-(+1))",result:1},
  {expression:"-(+(-1))",result:1},
  {expression:"+(-(+1))",result:-1},
  {expression:"-2*-2",result:4},
  {expression:"(-2)*(-2)",result:4},
  {expression:"-2*2",result:-4},
  {expression:"-2*+2",result:-4},
  {expression:"(-2)*(2)",result:-4},
  {expression:"(-2)*(+2)",result:-4},
  {expression:"-10/-5",result:2},
  {expression:"(-10)/(-5)",result:2},
  {expression:"10/-5",result:-2},
  {expression:"10/(-5)",result:-2},
  {expression:"+10/-5",result:-2},
  {expression:"(+10)/(-5)",result:-2},
  {expression:"-10/5",result:-2},
  {expression:"(-10)/5",result:-2},
  {expression:"-10/+5",result:-2},
  {expression:"(-10)/(+5)",result:-2},
  {expression:"2*5/2",result:5},
  {expression:"-2*5/2",result:-5},
  {expression:"(-2)*5/2",result:-5},
  {expression:"-2*5/-2",result:5},
  {expression:"(-2)*5/(-2)",result:5},
  {expression:"10/2*5",result:25},
  {expression:"-10/2*5",result:-25},
  {expression:"(-10)/2*5",result:-25},
  {expression:"-10/2*-5",result:25},
  {expression:"(-10)/2*(-5)",result:25},
  {expression:"-10/2*(-5)",result:25},
  {expression:"-10/-2*5",result:25},
  {expression:"(-10)/(-2)*5",result:25},
  {expression:"-10/(-2)*5",result:25},
  {expression:"2*3*4",result:24},
  {expression:"(2*3)*4",result:24},
  {expression:"2*(3*4)",result:24},
  {expression:"10/2/5",result:1},
  {expression:"(10/2)/5",result:1},
  {expression:"10/(2/5)",result:25},
  {expression:"20/2*2",result:20},
  {expression:"(20/2)*2",result:20},
  {expression:"20/(2*2)",result:5},
  {expression:"5+4-3",result:6},
  {expression:"(5+4)-3",result:6},
  {expression:"5+(4-3)",result:6},
  {expression:"5+(-4-3)",result:-2},
  {expression:"-5+(-4-3)",result:-12},
  {expression:"(-5)+(-4-3)",result:-12},
  {expression:"-(-5)-(-4-3)",result:12},
  {expression:"5(2+3)",result:25},
  {expression:"5(2(2*2))",result:40},
  {expression:"-5(-2(-2*-2))",result:40},
  {expression:"-5(2(2*2))",result:-40},
  {expression:"-5(-2(2*2))",result:40},
  {expression:"5(2(2*(2)))",result:40},
  {expression:"1.2+2.3",result:3.5},
  {expression:".2+.3",result:.5},
  {expression:"2.3-1.2",result:2.3-1.2},
  {expression:"2.3-.2",result:2.3-.2},
  {expression:"2.3-.2",result:2.3-.2},
  {expression:"2.3-.2*.5",result:2.3-.2*.5},
  {expression:"22.3-2/.5",result:22.3-2/.5},
  {expression:".1+.2*.3/.1+(.5-.3)*.2",result:.1+.2*.3/.1+(.5-.3)*.2},
  {expression:"-0.14+-.73*-.64/-.1+(.6-.8)*.4*15",result:-0.14+-.73*-.64/-.1+(.6-.8)*.4*15},
  {expression:"2.5 * (36/(-2*3))",result:2.5 * (36/(-2*3))},
  {expression:"(.8 + (1 - .2) - .6) * 10",result:(.8 + (1 - .2) - .6) * 10},
  {expression:"(-.4*.4)/(.8*-0.8)  * 4",result:(-.4*.4)/(.8*-0.8)  * 4},
  {expression:"3.5+5*(-4-(3/(3+1)-12*3-.2*22)-16/4*12-5/(2)+3.5+2.5*(1.5-2*7))-16",result:-225.5},
  {expression:"3.5+5(-4-(3/(3+1)-12*3-.2*22)-16/4*12-5/(2)+3.5+2.5(1.5-2*7))-16",result:-225.5},
  {expression:"12.436 - (2.15-1.6/.1) * (-8.33+(3   -1 *1.11)/  (3/(2.19+    .7*1)/1)+1)-11.5",result:-75.367805},
  {expression:"1/1000000000",result:0.000000001},
  {expression:"1e-9",result:0.000000001},
  {expression:"1000000000000",result:1000000000000},
  {expression:"8e12",result:8000000000000}
];